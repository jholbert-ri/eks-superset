# Namespace donde instalarás Superset
namespace: superset

# ─── Desactiva el PostgreSQL embebido ─────────────────────────
postgresql:
  enabled: false

# ─── Usa la instancia RDS ─────────────────────────────────────
externalDatabase:
  type: postgres
  host: superset-db.cpqy6c6oysbs.sa-east-1.rds.amazonaws.com   # endpoint RDS
  port: 5432
  database: superset                                           # nombre del esquema
  username: postgres                                   # usuario
  password: superset123                                  # ⚠️ opcional, ver Secret
  sslmode: require                                             # Forzar SSL

# ─── Variables que irán al Secret `superset-env` ──────────────
supersetNode:
  connections:
    db_host: superset-db.cpqy6c6oysbs.sa-east-1.rds.amazonaws.com
    db_port: 5432
    db_user: postgres
    db_pass: superset123          # ⚠️ idem, ver Secret
    db_name: superset
    db_sslmode: require           # Forzar SSL

    redis_host: superset-redis-master.superset.svc.cluster.local
    redis_port: 6379
    redis_user: ""
    redis_password: ""
    redis_cache_db: 1
    redis_celery_db: 2

# ─── Resto de ajustes (sin cambios) ───────────────────────────
configOverrides:
  secret: |
    import os
    SECRET_KEY = 'QyMamYN07qmkPWIdCWKyymtpjq4UTAzDjnY8OCq/JO+EAzhBDflVCBLP'
    # SSL Configuration for RDS
    SQLALCHEMY_DATABASE_URI = f"postgresql+psycopg2://{os.environ['DB_USER']}:{os.environ['DB_PASS']}@{os.environ['DB_HOST']}:{os.environ['DB_PORT']}/{os.environ['DB_NAME']}?sslmode=require"

bootstrapScript: |
  #!/bin/bash
  set -e
  echo "Installing PostgreSQL driver..."
  pip install --no-cache-dir psycopg2-binary
  echo "Installing additional drivers..."
  pip install --no-cache-dir pyhive
      echo "Dependencies installed successfully"
  if [ ! -f ~/bootstrap ]; then
    echo "Running Superset with uid {{ .Values.runAsUser }}" > ~/bootstrap
  fi

# ─── Configuración del Service para ALB ─────────────────────────
service:
  type: ClusterIP  # Importante: debe ser ClusterIP para TargetGroupBinding
  port: 8088
  targetPort: 8088
