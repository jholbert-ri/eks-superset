# deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: superset
  labels:
    app: superset
spec:
  # --- CORRECCIÓN ---
  # Se añade el número de réplicas desde tu values.yaml
  replicas: {{ .Values.replicaCount }}
  
  # --- CORRECCIÓN ---
  # Se añade el selector, que es obligatorio. Le dice al Deployment
  # qué pods debe gestionar. Debe coincidir con las etiquetas del pod.
  selector:
    matchLabels:
      app: superset
      
  template:
    metadata:
      # --- CORRECCIÓN ---
      # Se añaden las etiquetas al pod para que coincidan con el selector.
      labels:
        app: superset
    spec:
      containers:
      - name: superset
        # --- CORRECCIÓN ---
        # Se obtiene la imagen y la política de pull desde values.yaml
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        
        command: ["/bin/sh", "-c"]
        args:
          - |
            gunicorn --bind 0.0.0.0:8088 \
              --workers 5 \
              --worker-class gthread \
              --threads 4 \
              --timeout 120 \
              "superset.app:create_app()"
              
        ports:
        - name: http
          containerPort: 8088 # Puerto que la aplicación expone dentro del contenedor
        
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.supersetSecret.name }}
              key: {{ .Values.supersetSecret.key }}
              
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret }}
              # NOTA: Asegúrate de que la clave en tu secreto de postgres se llame 'DB_USER'
              key: DB_USER
              
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret }}
              # NOTA: Asegúrate de que la clave en tu secreto de postgres se llame 'DB_PASSWORD'
              key: DB_PASSWORD
              
        - name: SQLALCHEMY_DATABASE_URI
          value: "postgresql+psycopg2://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
          
        - name: SUPERSET_CONFIG_PATH
          value: /app/pythonpath/superset_config.py

        volumeMounts:
        - name: superset-config
          mountPath: /app/pythonpath
          
      volumes:
      - name: superset-config
        configMap:
          name: superset-config

